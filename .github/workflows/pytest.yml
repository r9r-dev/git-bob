name: Python Test

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
#  pull_request_review_comment:
#    types: [ created ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -e .

    - name: Test with pytest and generate coverage
      env:
        ANTHROPIC_API_KEY: "${{ secrets.ANTHROPIC_API_KEY }}"
        GOOGLE_API_KEY: "${{ secrets.GOOGLE_API_KEY }}"
        OPENAI_API_KEY: "${{ secrets.OPENAI_API_KEY }}"
        MISTRAL_API_KEY: "${{ secrets.MISTRAL_API_KEY }}"
        GH_MODELS_API_KEY: "${{ secrets.GH_MODELS_API_KEY }}"
        KISSKI_API_KEY: "${{ secrets.KISSKI_API_KEY }}"
        BLABLADOR_API_KEY: "${{ secrets.BLABLADOR_API_KEY }}"
        DEEPSEEK_API_KEY: "${{ secrets.DEEPSEEK_API_KEY }}"
        GITHUB_API_KEY: "${{ secrets.GITHUB_TOKEN }}"
        GITLAB_API_KEY: "${{ secrets.GITLAB_API_KEY }}"
        E_INFRA_CZ_API_KEY: "${{ secrets.E_INFRA_CZ_API_KEY }}"
      run: |
        pytest --cov=./ --cov-report=xml -m "not manual"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
